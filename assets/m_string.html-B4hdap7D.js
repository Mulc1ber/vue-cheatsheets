import{_ as n,c as s,o as a,d as t}from"./app-B0ZlUq4Z.js";const e={},p=t(`<h1 id="методы-строк" tabindex="-1"><a class="header-anchor" href="#методы-строк"><span>МЕТОДЫ СТРОК</span></a></h1><h2 id="список-методов-строк" tabindex="-1"><a class="header-anchor" href="#список-методов-строк"><span>Список методов строк:</span></a></h2><h3 id="длина-строки" tabindex="-1"><a class="header-anchor" href="#длина-строки"><span>Длина строки</span></a></h3><p><code>length</code>: Устанавливает или возвращает число элементов этого массива.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 22</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="смена-регистра" tabindex="-1"><a class="header-anchor" href="#смена-регистра"><span>Смена регистра</span></a></h3><p><code>toLowerCase()</code>: Возвращает значение строки, на которой он был вызван, преобразованное в нижний регистр.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;мой любимый javascript&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>toUpperCase()</code>: Возвращает значение строки, на которой он был вызван, преобразованное в верхний регистр.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;МОЙ ЛЮБИМЫЙ JAVASCRIPT&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="поиск-символов-в-строке" tabindex="-1"><a class="header-anchor" href="#поиск-символов-в-строке"><span>Поиск символов в строке</span></a></h3><p><code>indexOf()</code>: Возвращает первый индекс, по которому данный элемент может быть найден в массиве, или -1, если такого индекса нет.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 11</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>includes()</code>: Определяет, содержит ли массив определенный элемент, возвращая true или false соответственно.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="обрезка-строк" tabindex="-1"><a class="header-anchor" href="#обрезка-строк"><span>Обрезка строк</span></a></h3><p><code>slice()</code>: Возвращает новый массив, содержащий копию части исходного массива.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mango&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// Создаем копию массива, начиная с индекса 1 и до индекса 3 (не включая его)</span></span>
<span class="line"><span class="token keyword">let</span> citrus <span class="token operator">=</span> fruits<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Выведет: [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;, &#39;mango&#39;]</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>citrus<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Выведет: [&#39;banana&#39;, &#39;orange&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>substring()</code>: Возвращает подстроку строки между двумя индексами, или от одного индекса и до конца строки.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Мой&quot;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Мой&quot;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;юби&quot;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;юби&quot;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Мой любимый&quot;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Мой любимый&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="замена-символов-в-строке" tabindex="-1"><a class="header-anchor" href="#замена-символов-в-строке"><span>Замена символов в строке</span></a></h3><p><code>replace()</code>: Возвращает новую строку с некоторыми или всеми сопоставлениями с шаблоном, заменёнными на заменитель.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;Мой любимый&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>replaceAll()</code>: Возвращает новую строку со всеми совпадениями <code>pattern</code> , который меняется на <code>replacement</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Мой любимый JavaScript&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span>a<span class="token string">&quot;, &quot;</span><span class="token constant">A</span>&quot;<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;Мой любимый JAvAScript&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="повторение-строки-несколько-раз" tabindex="-1"><a class="header-anchor" href="#повторение-строки-несколько-раз"><span>Повторение строки несколько раз</span></a></h3><p><code>repeat()</code>: Конструирует и возвращает новую строку, содержащую указанное количество соединённых вместе копий строки, на которой он был вызван.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;hellohellohello&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="удаление-лишних-пробелов-в-начале-и-в-конце" tabindex="-1"><a class="header-anchor" href="#удаление-лишних-пробелов-в-начале-и-в-конце"><span>Удаление лишних пробелов в начале и в конце</span></a></h3><p><code>trim()</code>: Удаляет пробельные символы с начала и конца строки.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> nameOfUser <span class="token operator">=</span> <span class="token string">&#39; My name is John &#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nameOfUser<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// My name is John</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),c=[p];function o(l,i){return a(),s("div",null,c)}const r=n(e,[["render",o],["__file","m_string.html.vue"]]),d=JSON.parse('{"path":"/pages/methods/m_string.html","title":"МЕТОДЫ СТРОК","lang":"ru-RU","frontmatter":{},"headers":[{"level":2,"title":"Список методов строк:","slug":"список-методов-строк","link":"#список-методов-строк","children":[{"level":3,"title":"Длина строки","slug":"длина-строки","link":"#длина-строки","children":[]},{"level":3,"title":"Смена регистра","slug":"смена-регистра","link":"#смена-регистра","children":[]},{"level":3,"title":"Поиск символов в строке","slug":"поиск-символов-в-строке","link":"#поиск-символов-в-строке","children":[]},{"level":3,"title":"Обрезка строк","slug":"обрезка-строк","link":"#обрезка-строк","children":[]},{"level":3,"title":"Замена символов в строке","slug":"замена-символов-в-строке","link":"#замена-символов-в-строке","children":[]},{"level":3,"title":"Повторение строки несколько раз","slug":"повторение-строки-несколько-раз","link":"#повторение-строки-несколько-раз","children":[]},{"level":3,"title":"Удаление лишних пробелов в начале и в конце","slug":"удаление-лишних-пробелов-в-начале-и-в-конце","link":"#удаление-лишних-пробелов-в-начале-и-в-конце","children":[]}]}],"git":{},"filePathRelative":"pages/methods/m_string.md"}');export{r as comp,d as data};
