import{_ as s,c as n,o as a,d as e}from"./app-DLJTnBvI.js";const t={},p=e(`<h1 id="методы-объекта" tabindex="-1"><a class="header-anchor" href="#методы-объекта"><span>МЕТОДЫ ОБЪЕКТА</span></a></h1><h2 id="список-методов-объектов" tabindex="-1"><a class="header-anchor" href="#список-методов-объектов"><span>Список методов объектов:</span></a></h2><h3 id="entries-возвращает-новыи-объект-итератора-массива-содержащии-пары-ключ-значение-для-каждого-индекса" tabindex="-1"><a class="header-anchor" href="#entries-возвращает-новыи-объект-итератора-массива-содержащии-пары-ключ-значение-для-каждого-индекса"><span><strong><code>entries</code></strong>: Возвращает новый объект итератора массива, содержащий пары ключ-значение для каждого индекса.</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> iterator <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// Вывод:</span></span>
<span class="line"><span class="token comment">// 0 &#39;a&#39;</span></span>
<span class="line"><span class="token comment">// 1 &#39;b&#39;</span></span>
<span class="line"><span class="token comment">// 2 &#39;c&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="keys-возвращает-новыи-объект-итератора-массива-содержащии-ключи-для-каждого-индекса" tabindex="-1"><a class="header-anchor" href="#keys-возвращает-новыи-объект-итератора-массива-содержащии-ключи-для-каждого-индекса"><span><strong><code>keys</code></strong>: Возвращает новый объект итератора массива, содержащий ключи для каждого индекса.</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> iterator <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> index <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// Вывод:</span></span>
<span class="line"><span class="token comment">// 0</span></span>
<span class="line"><span class="token comment">// 1</span></span>
<span class="line"><span class="token comment">// 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="values-возвращает-новыи-объект-итератора-массива-содержащии-значения-для-каждого-индекса" tabindex="-1"><a class="header-anchor" href="#values-возвращает-новыи-объект-итератора-массива-содержащии-значения-для-каждого-индекса"><span><strong><code>values</code></strong>: Возвращает новый объект итератора массива, содержащий значения для каждого индекса.</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> iterator <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// Вывод:</span></span>
<span class="line"><span class="token comment">// &#39;a&#39;</span></span>
<span class="line"><span class="token comment">// &#39;b&#39;</span></span>
<span class="line"><span class="token comment">// &#39;c&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),c=[p];function l(o,i){return a(),n("div",null,c)}const r=s(t,[["render",l],["__file","m_object.html.vue"]]),d=JSON.parse('{"path":"/pages/methods/m_object.html","title":"МЕТОДЫ ОБЪЕКТА","lang":"ru-RU","frontmatter":{},"headers":[{"level":2,"title":"Список методов объектов:","slug":"список-методов-объектов","link":"#список-методов-объектов","children":[{"level":3,"title":"entries: Возвращает новый объект итератора массива, содержащий пары ключ-значение для каждого индекса.","slug":"entries-возвращает-новыи-объект-итератора-массива-содержащии-пары-ключ-значение-для-каждого-индекса","link":"#entries-возвращает-новыи-объект-итератора-массива-содержащии-пары-ключ-значение-для-каждого-индекса","children":[]},{"level":3,"title":"keys: Возвращает новый объект итератора массива, содержащий ключи для каждого индекса.","slug":"keys-возвращает-новыи-объект-итератора-массива-содержащии-ключи-для-каждого-индекса","link":"#keys-возвращает-новыи-объект-итератора-массива-содержащии-ключи-для-каждого-индекса","children":[]},{"level":3,"title":"values: Возвращает новый объект итератора массива, содержащий значения для каждого индекса.","slug":"values-возвращает-новыи-объект-итератора-массива-содержащии-значения-для-каждого-индекса","link":"#values-возвращает-новыи-объект-итератора-массива-содержащии-значения-для-каждого-индекса","children":[]}]}],"git":{},"filePathRelative":"pages/methods/m_object.md"}');export{r as comp,d as data};
