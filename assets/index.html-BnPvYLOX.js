import{_ as e,c as a,o as t,e as i}from"./app-cVBG_irh.js";const n={},l=i(`<h1 id="команды-которые-необходимы-для-минимальнои-работы-с-git" tabindex="-1"><a class="header-anchor" href="#команды-которые-необходимы-для-минимальнои-работы-с-git"><span>Команды которые необходимы для минимальной работы с Git.</span></a></h1><blockquote><p>Git - система контроля версий.</p></blockquote><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">Официальный сайт Git</a></p><p><a href="https://training.github.com/downloads/ru/github-git-cheat-sheet/" target="_blank" rel="noopener noreferrer">Альтернативная шпаргалка</a></p><h3 id="после-скачивания-и-установки-git-можно-ввести-команду-для-проверки-версии" tabindex="-1"><a class="header-anchor" href="#после-скачивания-и-установки-git-можно-ввести-команду-для-проверки-версии"><span>После скачивания и установки Git, можно ввести команду для проверки версии</span></a></h3><p><code>git -v</code> или <code>git --version</code></p><h3 id="инициализация-git-в-проекте" tabindex="-1"><a class="header-anchor" href="#инициализация-git-в-проекте"><span>Инициализация Git в проекте</span></a></h3><p><code>git init</code></p><h3 id="если-проект-нужно-клонировать-с-репозитория-github-gitlab" tabindex="-1"><a class="header-anchor" href="#если-проект-нужно-клонировать-с-репозитория-github-gitlab"><span>Если проект нужно клонировать с репозитория (GitHub / GitLab)</span></a></h3><p><code>git clone &lt;url_repository&gt;</code></p><h3 id="проверка-привязки-проекта-к-репозиторию" tabindex="-1"><a class="header-anchor" href="#проверка-привязки-проекта-к-репозиторию"><span>Проверка привязки проекта к репозиторию</span></a></h3><p><code>git remote -v</code></p><p>Если команда ничего не вывела в консоль, значит проект пока не привязан к удаленному репозиторию Иначе командная строка выведет примерно следующее:</p><h4 id="в-случае-клонирования-с-помощью-https" tabindex="-1"><a class="header-anchor" href="#в-случае-клонирования-с-помощью-https"><span>В случае клонирования с помощью HTTPS</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">origin https://github.com/&lt;USER_NAME&gt;/&lt;REPO&gt;.git (fetch)</span>
<span class="line">origin https://github.com/&lt;USER_NAME&gt;/&lt;REPO&gt;.git (push)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="в-случае-клонирования-с-помощью-ssh" tabindex="-1"><a class="header-anchor" href="#в-случае-клонирования-с-помощью-ssh"><span>В случае клонирования с помощью SSH</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">origin git@github.com:&lt;USER_NAME&gt;/&lt;REPO&gt;.git (fetch)</span>
<span class="line">origin git@github.com:&lt;USER_NAME&gt;/&lt;REPO&gt;.git (push)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="привязка-проекта-к-удаленному-репозиторию" tabindex="-1"><a class="header-anchor" href="#привязка-проекта-к-удаленному-репозиторию"><span>Привязка проекта к удаленному репозиторию</span></a></h3><p><code>git remote add origin https://github.com/&lt;USER_NAME&gt;/&lt;REPO&gt;.git</code> где <code>origin</code> - название ссылки к удаленному репозиторию.</p><h3 id="удаление-удаленного-источника" tabindex="-1"><a class="header-anchor" href="#удаление-удаленного-источника"><span>Удаление удаленного источника</span></a></h3><p><code>git remote rm &lt;name_remote&gt;</code></p><h3 id="параметры-git-config" tabindex="-1"><a class="header-anchor" href="#параметры-git-config"><span>Параметры Git config</span></a></h3><p><code>git config user.name</code> и <code>git config user.email</code> Данные параметры необходимы для указания автора комитов(commit) чтобы в Git можно было увидеть, кто делал конкретные изменения в проекте.</p><p>Для изменения или добавления данных, необходимо через пробел и в кавычках указать ИМЯ пользователя и его Email <code>git config user.name &quot;&lt;USER_NAME&gt;&quot;</code><code>git config user.email &quot;&lt;EMAIl&gt;&quot;</code></p><h3 id="просмотр-записи-с-комментариями-в-проекте" tabindex="-1"><a class="header-anchor" href="#просмотр-записи-с-комментариями-в-проекте"><span>Просмотр записи с комментариями в проекте</span></a></h3><p><code>git log</code> Так же существует краткая запись комитов (commit): <code>git log --oneline</code></p><h3 id="просмотр-ветки" tabindex="-1"><a class="header-anchor" href="#просмотр-ветки"><span>Просмотр ветки</span></a></h3><p><code>git branch</code></p><h3 id="добавление-ветки" tabindex="-1"><a class="header-anchor" href="#добавление-ветки"><span>Добавление ветки</span></a></h3><p><code>git branch &lt;name_new_branch&gt;</code></p><h3 id="удаление-ветки" tabindex="-1"><a class="header-anchor" href="#удаление-ветки"><span>Удаление ветки</span></a></h3><p><code>git branch -d &lt;name_branch&gt;</code></p><h3 id="переключение-переход-на-другую-ветку" tabindex="-1"><a class="header-anchor" href="#переключение-переход-на-другую-ветку"><span>Переключение (переход) на другую ветку</span></a></h3><p><code>git checkout &lt;name_branch&gt;</code></p><h3 id="создание-с-переходом-на-новую-ветку" tabindex="-1"><a class="header-anchor" href="#создание-с-переходом-на-новую-ветку"><span>Создание с переходом на новую ветку</span></a></h3><p><code>git checkout -b &lt;name_new_branch&gt;</code></p><h3 id="удаление-фаилов-из-промежуточнои-области" tabindex="-1"><a class="header-anchor" href="#удаление-фаилов-из-промежуточнои-области"><span>Удаление файлов из промежуточной области</span></a></h3><p><code>git reset &lt;name_file&gt;</code></p><p>Чтобы добавить файлы в промежуточную область (<strong>stage</strong>), используют команду <code>git add &lt;name_file&gt;</code></p><h3 id="просмотр-изменения-в-проекте-изменения-добавления-удаления" tabindex="-1"><a class="header-anchor" href="#просмотр-изменения-в-проекте-изменения-добавления-удаления"><span>Просмотр изменения в проекте (изменения, добавления, удаления)</span></a></h3><p><code>git diff</code></p><h3 id="удаления-всех-изменении-которые-не-были-зафиксированы" tabindex="-1"><a class="header-anchor" href="#удаления-всех-изменении-которые-не-были-зафиксированы"><span>Удаления всех изменений, которые не были зафиксированы</span></a></h3><p><code>git reset --hard</code></p><h3 id="слияние-веток" tabindex="-1"><a class="header-anchor" href="#слияние-веток"><span>Слияние веток</span></a></h3><p><code>git merge &lt;name_branch&gt;</code></p><p>Перед слиянием веток необходимо перейти в ту ветку, в которую будут заливаться изменения. Далее прописываем команду и указывает имя ветки, которую хотим слить <code>git merge &lt;name_branch&gt;</code>.</p><br><br><h2 id="создание-и-подключение-ssh" tabindex="-1"><a class="header-anchor" href="#создание-и-подключение-ssh"><span>Создание и подключение SSH</span></a></h2><p><code>ssh-keygen -o</code></p><p>Нужно будет указать где сохранить файл После нужно ввести пароль !Пароль должен быть сгенерирован!</p><h3 id="после-генерации-ключа-можно-в-терминале-вывести-содержимое-фаила" tabindex="-1"><a class="header-anchor" href="#после-генерации-ключа-можно-в-терминале-вывести-содержимое-фаила"><span>После генерации ключа можно в терминале вывести содержимое файла</span></a></h3><p><code>cat &lt;путь_до_публичного_файла_ssh&gt;</code></p><h3 id="команда-для-доступа-к-ssh-ключу" tabindex="-1"><a class="header-anchor" href="#команда-для-доступа-к-ssh-ключу"><span>Команда для доступа к ssh ключу</span></a></h3><p><code>ssh-add &lt;путь_до_публичного_ключе_без_расширения_.pub&gt;</code></p><br><br><h2 id="gitflow" tabindex="-1"><a class="header-anchor" href="#gitflow"><span>GitFlow</span></a></h2><blockquote><p>GitFlow - модель взаимодействия и хранения кода.</p></blockquote><h4 id="последовательность-работы-gitflow" tabindex="-1"><a class="header-anchor" href="#последовательность-работы-gitflow"><span>Последовательность работы GitFlow</span></a></h4><pre><code>1. Создать репозиторий на GitHub и клонировать его на компьютер.
2. Создать ветку разработки develop от главное ветки (master/main).
3. Создать от ветки develop feature/-ветки мержить(merge) feature/-ветки в develop.
4. Создание ветки release/0.1.0 от develop.
5. Когда ветка release/0.1.0 закончена, то она мержится(merge) в develop и main и затем удаляется.
6. Если в ветке main обнаруживается ошибка, то создается hotfix-ветка.
7. Когда работа над hotfix-веткой завершается, то ее нужно мержить(merge) в develop и main.
</code></pre>`,61),s=[l];function c(d,h){return t(),a("div",null,s)}const o=e(n,[["render",c],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/pages/git/","title":"Команды которые необходимы для минимальной работы с Git.","lang":"ru-RU","frontmatter":{},"headers":[{"level":3,"title":"После скачивания и установки Git, можно ввести команду для проверки версии","slug":"после-скачивания-и-установки-git-можно-ввести-команду-для-проверки-версии","link":"#после-скачивания-и-установки-git-можно-ввести-команду-для-проверки-версии","children":[]},{"level":3,"title":"Инициализация Git в проекте","slug":"инициализация-git-в-проекте","link":"#инициализация-git-в-проекте","children":[]},{"level":3,"title":"Если проект нужно клонировать с репозитория (GitHub / GitLab)","slug":"если-проект-нужно-клонировать-с-репозитория-github-gitlab","link":"#если-проект-нужно-клонировать-с-репозитория-github-gitlab","children":[]},{"level":3,"title":"Проверка привязки проекта к репозиторию","slug":"проверка-привязки-проекта-к-репозиторию","link":"#проверка-привязки-проекта-к-репозиторию","children":[]},{"level":3,"title":"Привязка проекта к удаленному репозиторию","slug":"привязка-проекта-к-удаленному-репозиторию","link":"#привязка-проекта-к-удаленному-репозиторию","children":[]},{"level":3,"title":"Удаление удаленного источника","slug":"удаление-удаленного-источника","link":"#удаление-удаленного-источника","children":[]},{"level":3,"title":"Параметры Git config","slug":"параметры-git-config","link":"#параметры-git-config","children":[]},{"level":3,"title":"Просмотр записи с комментариями в проекте","slug":"просмотр-записи-с-комментариями-в-проекте","link":"#просмотр-записи-с-комментариями-в-проекте","children":[]},{"level":3,"title":"Просмотр ветки","slug":"просмотр-ветки","link":"#просмотр-ветки","children":[]},{"level":3,"title":"Добавление ветки","slug":"добавление-ветки","link":"#добавление-ветки","children":[]},{"level":3,"title":"Удаление ветки","slug":"удаление-ветки","link":"#удаление-ветки","children":[]},{"level":3,"title":"Переключение (переход) на другую ветку","slug":"переключение-переход-на-другую-ветку","link":"#переключение-переход-на-другую-ветку","children":[]},{"level":3,"title":"Создание с переходом на новую ветку","slug":"создание-с-переходом-на-новую-ветку","link":"#создание-с-переходом-на-новую-ветку","children":[]},{"level":3,"title":"Удаление файлов из промежуточной области","slug":"удаление-фаилов-из-промежуточнои-области","link":"#удаление-фаилов-из-промежуточнои-области","children":[]},{"level":3,"title":"Просмотр изменения в проекте (изменения, добавления, удаления)","slug":"просмотр-изменения-в-проекте-изменения-добавления-удаления","link":"#просмотр-изменения-в-проекте-изменения-добавления-удаления","children":[]},{"level":3,"title":"Удаления всех изменений, которые не были зафиксированы","slug":"удаления-всех-изменении-которые-не-были-зафиксированы","link":"#удаления-всех-изменении-которые-не-были-зафиксированы","children":[]},{"level":3,"title":"Слияние веток","slug":"слияние-веток","link":"#слияние-веток","children":[]},{"level":2,"title":"Создание и подключение SSH","slug":"создание-и-подключение-ssh","link":"#создание-и-подключение-ssh","children":[{"level":3,"title":"После генерации ключа можно в терминале вывести содержимое файла","slug":"после-генерации-ключа-можно-в-терминале-вывести-содержимое-фаила","link":"#после-генерации-ключа-можно-в-терминале-вывести-содержимое-фаила","children":[]},{"level":3,"title":"Команда для доступа к ssh ключу","slug":"команда-для-доступа-к-ssh-ключу","link":"#команда-для-доступа-к-ssh-ключу","children":[]}]},{"level":2,"title":"GitFlow","slug":"gitflow","link":"#gitflow","children":[]}],"git":{"updatedTime":1721458993000,"contributors":[{"name":"Mulc1ber","email":"60298959+Mulc1ber@users.noreply.github.com","commits":1},{"name":"Mulc1ber","email":"dmo@mail.ru","commits":1}]},"filePathRelative":"pages/git/README.md"}');export{o as comp,g as data};
