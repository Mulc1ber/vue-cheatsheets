import{_ as e,c as a,o as t,e as s}from"./app-3zXcJHqD.js";const n={},r=s(`<h1 id="остальное-в-разработке" tabindex="-1"><a class="header-anchor" href="#остальное-в-разработке"><span>Остальное (в разработке)</span></a></h1><h2 id="контент-без-категории-временно" tabindex="-1"><a class="header-anchor" href="#контент-без-категории-временно"><span>Контент без категории (временно)</span></a></h2><h4 id="коллекция-классов-classlist" tabindex="-1"><a class="header-anchor" href="#коллекция-классов-classlist"><span>Коллекция классов classList</span></a></h4><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/classList" target="_blank" rel="noopener noreferrer">Свойство</a> <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/classList" target="_blank" rel="noopener noreferrer"><em>classList</em></a> содержит в себе коллекцию классов элемента:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> classList <span class="token operator">=</span> p<span class="token punctuation">.</span>classList<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>В нашем примере коллекция будет содержать единственное значение <em>&quot;text&quot;</em>.</p><p>У <em>classList</em> есть несколько методов:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add" target="_blank" rel="noopener noreferrer">Метод <em>add()</em></a> — добавляет класс к элементу</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove" target="_blank" rel="noopener noreferrer">Метод <em>remove()</em></a> — удаляет класс</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle" target="_blank" rel="noopener noreferrer">Метод <em>toggle()</em></a> — добавляет класс, если его ещё нет, иначе удаляет</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace" target="_blank" rel="noopener noreferrer">Метод <em>replace()</em></a> — заменяет один класс другим</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace" target="_blank" rel="noopener noreferrer">Метод <em>contains()</em></a> — сравнивает, является ли узел потомком данного узла, т. е. сам узел, один из его прямых потомков ( <code>childNodes</code> ), один из детей его детей и так далее.</li></ul><hr><h4 id="dom-elements" tabindex="-1"><a class="header-anchor" href="#dom-elements"><span>DOM Elements</span></a></h4><p><code>remove()</code> - удаляет элемент из DOM-дерева.</p><p><code>closest()</code> - находит ближайший родительский элемент по заданному селектору. Сам элемент тоже включается в поиск, то есть если сам элемент удовлетворяет условию селектора, то будет возвращен он.</p><h4 id="работа-с-атрибутами" tabindex="-1"><a class="header-anchor" href="#работа-с-атрибутами"><span>Работа с атрибутами:</span></a></h4><p><code>.hasAttribute(&#39;&lt;name attribute&gt;&#39;)</code> -&gt; имеет ли элемент указанный атрибут. Возвращает булево значение</p><p><code>.getAttribute(&#39;&lt;name attribute&gt;&#39;)</code> -&gt; получает значение атрибута по имени</p><p><code>.removeAttribute(&#39;&lt;name attribute&gt;&#39;)</code> -&gt; удаляет атрибут</p><p><code>.setAttribute(&#39;&lt;name attribute&gt;&#39;)</code> -&gt; устанавливает значение атрибута</p>`,17),o=[r];function l(p,c){return t(),a("div",null,o)}const d=e(n,[["render",l],["__file","other.html.vue"]]),h=JSON.parse('{"path":"/pages/javascript/other.html","title":"Остальное (в разработке)","lang":"ru-RU","frontmatter":{},"headers":[{"level":2,"title":"Контент без категории (временно)","slug":"контент-без-категории-временно","link":"#контент-без-категории-временно","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"pages/javascript/other.md"}');export{d as comp,h as data};
